{"componentChunkName":"component---src-templates-docs-js","path":"/wdio_integrations/4-Video-reporter","result":{"data":{"site":{"siteMetadata":{"title":"Codemify | Software QA Automation Academy","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"21151450-c06b-5748-81ee-0ede77ec41b1","title":"4. Video reporter","slug":"/wdio_integrations/4-Video-reporter"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"4. Video reporter\",\n  \"metaTitle\": \"How to install video reporter\",\n  \"metaDescription\": \"How to integrate video reporter with WebdriverIO / WDIO\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"How to install video reporter\"), mdx(\"p\", null, \"Prerequisite: NodeJS, WDIO, and allure reporter installed\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"1. Install video reporter\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"  npm install wdio-video-reporter\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"2. Add following import to your configuration file\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"    const video = require('wdio-video-reporter');\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"3. Overwrite reporters property in your configuration file(likely wdio.conf.js)\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"    reporters: [\\n    [video, {\\n      saveAllVideos: false,       // If true, also saves videos for successful test cases\\n      videoSlowdownMultiplier: 3, // Higher to get slower videos, lower for faster videos [Value 1-100]\\n    }],\\n    ['allure', {\\n      outputDir: './_results_/allure-raw',\\n      disableWebdriverStepsReporting: true,\\n      disableWebdriverScreenshotsReporting: true,\\n    }],\\n  ],\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"4. Run your tests\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"5. Generate and open report\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"    allure serve _results_/allure-raw\\n\")), mdx(\"p\", null, \"Notes: You should be able to open report, navigate to failures section, click on one of them, and see video of failed test video execution.\"), mdx(\"p\", null, \"Bingo! Now you know how to use video reporter. Let if you have any questions, feel free to send them by means below!\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Enjoy it!\"), \"\\n@Codemify - telegram, instagram, youtube\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#how-to-install-video-reporter","title":"How to install video reporter"}]},"parent":{"__typename":"File","relativePath":"wdio_integrations/4-Video-reporter.md"},"frontmatter":{"metaTitle":"How to install video reporter","metaDescription":"How to integrate video reporter with WebdriverIO / WDIO"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/automation","title":"Automation testing"}}},{"node":{"fields":{"slug":"/automation/4-WaitUntil usage examples","title":"4. How to use waitUntil?"}}},{"node":{"fields":{"slug":"/wdio_integrations/1-Visual-Regression-Webdirverio","title":"1. Visual Regression"}}},{"node":{"fields":{"slug":"/about","title":"About us"}}},{"node":{"fields":{"slug":"/wdio_integrations/2-Docker","title":"2. How to Dockerize WDIO"}}},{"node":{"fields":{"slug":"/introduction","title":"Courses Information"}}},{"node":{"fields":{"slug":"/starter/3-Types-of-testing","title":"3. Testing types and methods"}}},{"node":{"fields":{"slug":"/api","title":"API Testing"}}},{"node":{"fields":{"slug":"/","title":"Welcome to Codemify Academy"}}},{"node":{"fields":{"slug":"/interview","title":"Interview"}}},{"node":{"fields":{"slug":"/wdio_integrations/4-Video-reporter","title":"4. Video reporter"}}},{"node":{"fields":{"slug":"/about/privacy-policy","title":"Privacy Policy"}}},{"node":{"fields":{"slug":"/wdio_integrations/3-How-to-install-allure-reporter","title":"3. Allure reporter"}}},{"node":{"fields":{"slug":"/starter","title":"Starter"}}},{"node":{"fields":{"slug":"/about/course-agreement","title":"Course Agreement"}}},{"node":{"fields":{"slug":"/about/Terms-of-use","title":"Terms of use"}}},{"node":{"fields":{"slug":"/nodejs","title":"NodeJS"}}},{"node":{"fields":{"slug":"/starter/4-Test-cases","title":"4. Test cases"}}},{"node":{"fields":{"slug":"/api/1-What-is-api","title":"1. What is API?"}}},{"node":{"fields":{"slug":"/wdio_integrations","title":"WDIO Integrations"}}},{"node":{"fields":{"slug":"/git","title":"Git, and how to use it"}}},{"node":{"fields":{"slug":"/starter/2-Bug-reports","title":"2. Bug reports"}}},{"node":{"fields":{"slug":"/starter/1-Starter","title":"1. QA Basics"}}},{"node":{"fields":{"slug":"/git/1-git-vs-github","title":"Git and Github"}}},{"node":{"fields":{"slug":"/nodejs/1-how-to-install-nodejs","title":"1. How to install NodeJS and npm"}}},{"node":{"fields":{"slug":"/git/2-git-situations-for-newbies","title":"Git situations for newbies"}}},{"node":{"fields":{"slug":"/interview/interview","title":"Interview questions"}}},{"node":{"fields":{"slug":"/automation/1-Automation-with-WebdriverIO","title":"1. Automation with WebdriverIO"}}},{"node":{"fields":{"slug":"/git/3-git-how-to-check-pull-requests","title":"Git how to check pull requests"}}},{"node":{"fields":{"slug":"/automation/3-What-is-wdio-conf-js","title":"3. What is wdio.conf.js?"}}},{"node":{"fields":{"slug":"/automation/6-CSS-Selectors","title":"6. CSS Selectors for Automation"}}},{"node":{"fields":{"slug":"/automation/5-How-to-use-map-method-in-automation","title":"5. How to use MAP?"}}},{"node":{"fields":{"slug":"/automation/8-Assertions","title":"8. Assertions"}}},{"node":{"fields":{"slug":"/automation/7-The-power-of-XPath","title":"7. The Power Of XPath"}}},{"node":{"fields":{"slug":"/automation/2-Page-Object-Model copy","title":"2. Page Object Model"}}},{"node":{"fields":{"slug":"/automation/9-Errors-explanation","title":"9. JS Automation test errors explanation"}}},{"node":{"fields":{"slug":"/api/2. API-testing-with-postman","title":"2. API testing with postman?"}}},{"node":{"fields":{"slug":"/api/3-How-to-test-apis","title":"4. How to test API?"}}},{"node":{"fields":{"slug":"/api/4-API-status-codes","title":"3. API status codes"}}}]}},"pageContext":{"id":"21151450-c06b-5748-81ee-0ede77ec41b1"}},"staticQueryHashes":["1685914912","1685914912","2619113677","2619113677","3706406642","3706406642"]}