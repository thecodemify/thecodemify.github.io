{"componentChunkName":"component---src-templates-docs-js","path":"/automation/5-How-to-use-map-method-in-automation","result":{"data":{"site":{"siteMetadata":{"title":"Codemify | Software QA Automation Academy","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"d3a2f4e1-5998-5904-8d55-291f60b1061b","title":"5. How to use MAP?","slug":"/automation/5-How-to-use-map-method-in-automation"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"5. How to use MAP?\",\n  \"metaTitle\": \"WebdriverIO map method\",\n  \"metaDescription\": \"Learn how to use map function/method with Codemify\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"How to use map in automation testing? WebdriverIO example\"), mdx(\"p\", null, \"Let's start with: How does it work?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The map() method creates a new array populated with the results of calling a provided function on every element in the calling array.\")), mdx(\"p\", null, \"This might look too smart and not clear. Let's just see an example:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"// This is an example of helper method that uses map\\nclickByLabel(label){\\n    // Create object named hash\\n    let hash = {};\\n\\n    // Loop through yourSelectors and fill up object with keys(text of each label with h1 tag), and values: \\\"div a\\\" selector so we could perform action on it\\n    $$('.fakeClasses').map(elem => hash[elem.$('h1').getText()] = elem.$('div a'));\\n    // Same as line above but: this.yourSelectors.map(elem => hash[elem.getText()] = elem);\\n\\n    // Performing actual action on it. Note, one of your labels that we got text of must match with parameter that yo will pass in(label)\\n    hash[label].click();\\n}\\n\")), mdx(\"h1\", null, \"How to debug map if it doesn't work?\"), mdx(\"p\", null, \"Case one:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://user-images.githubusercontent.com/33443927/73781992-1a22ea00-4746-11ea-981f-1af82b0caa80.png\",\n    \"alt\": \"undefined\"\n  }))), mdx(\"p\", null, \"If you see following error, this means the parameter you are passing in:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"doesn't exist\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"there is a race condition(it didn't show up yet, and click already happened)\")), mdx(\"h3\", null, \"There are few ways to debug it:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"add browser.pause(2000) right before map. It will help if it's a race condition. If it is, then you will need to add waitUntil so all options would display before it actually maps them.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"    let hash = {};\\n    browser.pause(2000);\\n    $$('.fakeClasses').map(elem => hash[elem.$('h1').getText()] = elem.$('div a'));\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"add a browser.debug() right before map. It will stop browser and you will be able to see if you element exist and there was a race condition.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"    let hash = {};\\n    browser.debug()\\n    $$('.fakeClasses').map(elem => hash[elem.$('h1').getText()] = elem.$('div a'));\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"console.log all options that you've mapped. This will show you all available options of \\\"h1\\\" tag that we have mapped.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"    let hash = {};\\n    $$('.fakeClasses').map(elem => hash[elem.$('h1').getText()] = elem.$('div a'));\\n    console.log(Object.keys(hash));\\n\")), mdx(\"p\", null, \"We will add video with example of it soon\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#how-to-use-map-in-automation-testing-webdriverio-example","title":"How to use map in automation testing? WebdriverIO example"},{"url":"#how-to-debug-map-if-it-doesnt-work","title":"How to debug map if it doesn't work?","items":[{"items":[{"url":"#there-are-few-ways-to-debug-it","title":"There are few ways to debug it:"}]}]}]},"parent":{"__typename":"File","relativePath":"automation/5-How-to-use-map-method-in-automation.md"},"frontmatter":{"metaTitle":"WebdriverIO map method","metaDescription":"Learn how to use map function/method with Codemify"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/automation","title":"Automation testing"}}},{"node":{"fields":{"slug":"/automation/4-WaitUntil usage examples","title":"4. How to use waitUntil?"}}},{"node":{"fields":{"slug":"/wdio_integrations/1-Visual-Regression-Webdirverio","title":"1. Visual Regression"}}},{"node":{"fields":{"slug":"/about","title":"About us"}}},{"node":{"fields":{"slug":"/wdio_integrations/2-Docker","title":"2. How to Dockerize WDIO"}}},{"node":{"fields":{"slug":"/api","title":"API Testing"}}},{"node":{"fields":{"slug":"/interview","title":"Interview"}}},{"node":{"fields":{"slug":"/","title":"Welcome to Codemify Academy"}}},{"node":{"fields":{"slug":"/starter","title":"Starter"}}},{"node":{"fields":{"slug":"/nodejs","title":"NodeJS"}}},{"node":{"fields":{"slug":"/introduction","title":"Courses Information"}}},{"node":{"fields":{"slug":"/wdio_integrations","title":"WDIO Integrations"}}},{"node":{"fields":{"slug":"/git","title":"Git, and how to use it"}}},{"node":{"fields":{"slug":"/starter/2-Bug-reports","title":"2. Bug reports"}}},{"node":{"fields":{"slug":"/starter/1-Starter","title":"1. QA Basics"}}},{"node":{"fields":{"slug":"/starter/3-Types-of-testing","title":"3. Testing types and methods"}}},{"node":{"fields":{"slug":"/git/1-git-vs-github","title":"Git and Github"}}},{"node":{"fields":{"slug":"/nodejs/1-how-to-install-nodejs","title":"1. How to install NodeJS and npm"}}},{"node":{"fields":{"slug":"/git/2-git-situations-for-newbies","title":"Git situations for newbies"}}},{"node":{"fields":{"slug":"/interview/interview","title":"Interview questions"}}},{"node":{"fields":{"slug":"/automation/1-Automation-with-WebdriverIO","title":"1. Automation with WebdriverIO"}}},{"node":{"fields":{"slug":"/git/3-git-how-to-check-pull-requests","title":"Git how to check pull requests"}}},{"node":{"fields":{"slug":"/automation/3-What-is-wdio-conf-js","title":"3. What is wdio.conf.js?"}}},{"node":{"fields":{"slug":"/automation/6-CSS-Selectors","title":"6. CSS Selectors for Automation"}}},{"node":{"fields":{"slug":"/automation/5-How-to-use-map-method-in-automation","title":"5. How to use MAP?"}}},{"node":{"fields":{"slug":"/automation/8-Assertions","title":"8. Assertions"}}},{"node":{"fields":{"slug":"/automation/7-The-power-of-XPath","title":"7. The Power Of XPath"}}},{"node":{"fields":{"slug":"/automation/2-Page-Object-Model copy","title":"2. Page Object Model"}}},{"node":{"fields":{"slug":"/api/1-What-is-api","title":"1. What is API?"}}},{"node":{"fields":{"slug":"/automation/9-Errors-explanation","title":"9. JS Automation test errors explanation"}}},{"node":{"fields":{"slug":"/api/2. API-testing-with-postman","title":"2. API testing with postman?"}}},{"node":{"fields":{"slug":"/api/3-How-to-test-apis","title":"4. How to test API?"}}},{"node":{"fields":{"slug":"/api/4-API-status-codes","title":"3. API status codes"}}},{"node":{"fields":{"slug":"/about/about","title":"Privacy Policy"}}}]}},"pageContext":{"id":"d3a2f4e1-5998-5904-8d55-291f60b1061b"}},"staticQueryHashes":["1685914912","1685914912","2619113677","2619113677","3706406642","3706406642"]}